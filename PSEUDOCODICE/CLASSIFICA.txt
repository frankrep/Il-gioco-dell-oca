

aggiornare_classifica_top_10

DATI DI INPUT
file_classifica_top_10, contiene record di tipo vincitore corrispondenti ai dieci migliori giocatori di sempre, file di tipo binario
vincitore_partita, vincitore della partita appena conclusa di cui confrontare il numero di lanci per verificarne l'inserimento, record di tipo vincitore 

DATI DI OUTPUT
file_classifica_top_10, file della classifica eventualmente aggiornato con l'inserimento di vincitore_partita, file di tipo binario

DATI DI LAVORO
inserito, indica se il vincitore è stato già inserito in classifica oppure no, booleano, = VERO (il vincitore è stato inserito all'interno della classifica), = FALSO (il vincitore non è stato inserito in classifica)
indice_vincitori, indice di spostamento all'interno l'array di vincitori, intero, >0
vincitori, elenco dei dieci migliori giocatori di partite , array a una dimensione (NUMERO_MASSIMO_CLASSIFICATI) di vincitore
rateo_vincitore_partita, rapporto tra i lanci dei dadi e la lunghezza del percorso del vincitore della partita, intero
rateo_classificato, rapporto tra i lanci dei dadi e la lunghezza del percorso del vincitore già presente già in classifica, intero
NUMERO_MASSIMO_CLASSIFICATI, numero massimo di giocatori di cui è composta la classifica, intero, = 10
ALGORITTMO
vincitori = caricare_classifica (file_classifica_top_10)
inserito = FALSO
rateo_vincitore_partita = leggere_lanci_vincitore(vincitore_partita)  / leggere_lunghezza_percorso_vincitore(vincitore_partita)
indice_vincitori = 1               
rateo_vincitore_partita = leggere_numero_lanci_vincitore(vincitore_partita) / leggere_lunghezza_percorso_vincitore(vincitore_partita)
MENTRE ( indice_vincitori <= NUMERO_MASSIMO_CLASSIFICATI )
    SE (leggere_carattere_nome_vincitore(Elemento di vincitori in posizione indice_vincitori, 0) != FINE_STRINGA)
    ALLORA
        rateo_classificato = leggere_numero_lanci_vincitore(Elemento in posizione indice_vincitori di vincitori) / leggere_lunghezza_percorso_vincitore(Elemento in posizione indice_vincitori di vincitori)
        SE ((rateo_vincitore_partita <= rateo_classificato) AND (inserito != VERO))
        ALLORA
            vincitori = spostamento_destra_vincitori(vincitori, indice_vincitori, vincitore_partita)
            inserito = VERO                
        FINE
    ALTRIMENTI
        SE (inserito != VERO) 
        ALLORA
            Elemento di vincitori in posizione indice_vincitori = vincitore_partita
            inserito = VERO
        FINE
FINE
    indice_vincitori = indice_vincitori + 1
file_classifica_top_10  = scrivere_classifica(vincitori)


spostamento_destra_vincitori

DATI DI INPUT
vincitori, elenco da spostare verso destra, Array ad una dimensione (NUMERO_MASSIMO_CLASSIFICATI) di vincitore
posizione_inserimento, posizione all'interno di vincitori in cui inserire il nuovo giocatore, intero, > 0
vincitore_partita, , vincitore, 
NUMERO_MASSIMO_CLASSIFICATI, numero massimo di giocatori di cui è composta la classifica, intero, = 10

DATI DI OUTPUT
vincitori, elenco spostato verso destra in posizione_inserimento, Array ad una dimensione (NUMERO_MASSIMO_CLASSIFICATI) di vincitore

DATI DI LAVORO
indice_vincitori, indice di scorrimento nell'array di tipo vincitori, intero 

ALGORITMO
indice_vincitori = NUMERO_MASSIMO_CLASSIFICATI - 1
MENTRE (indice_vincitori >= posizione_inserimento)
    Elemento in posizione indice_vincitori di vincitori = Elemento in posizione (indice_vincitori - 1) di vincitori
    indice_vincitori = indice_vincitori - 1
FINE
Elemento in posizione posizione_inserimento di vincitori = vincitore_partita




caricare_classifica

DATI DI INPUT
file_classifica_top_10, contiene record di tipo giocatore corrispondenti ai dieci migliori giocatori di sempre, file di tipo binario
NUMERO_MASSIMO_CLASSIFICATI, il numero massimo dei giocatori in classifica, Intero, = 10

DATI DI OUTPUT
vincitori, i giocatori vincitori presenti nel file della classifica, Array ad una dimensione (NUMERO_MASSIMO_CLASSIFICATI) di vincitore

DATI DI LAVORO
indice_vincitore, indica lo spostamento all'interno di vincitori, intero, > 0, <= NUMERO_MASSIMO_CLASSIFICATI

ALGORITMO
indice_vincitore = 1
MENTRE (indice_vincitore <= NUMERO_MASSIMO_CLASSIFICATI)
        Elemento in posizione indice_vincitore di vincitori = leggere_da_file (file_classifica_top_10)
        indice_vincitore = indice_vincitore + 1
FINE



scrivere_classifica

DATI DI INPUT
file_classifica_top_10, contiene record di tipo giocatore corrispondenti ai dieci migliori giocatori di sempre, file di tipo binario
elenco_classificati, l'elenco dei classificati da salvare in file_classifica_top_10, Array ad una dimensione (NUMERO_MASSIMO_CLASSIFICATI) di vincitore
NUMERO_MASSIMO_CLASSIFICATI, numero massimo di giocatori di cui è composta la classifica, intero, = 10

DATI DI OUTPUT
file_classifica_top_10, il file della classifica con 

DATI DI LAVORO


ALGORITMO
indice_classificati  = 1
MENTRE (indice_partita <= NUMERO_MASSIMO_CLASSIFICATI)
    file_classifica_top_10 = scrivere_su_file (file_classifica_top_10, Elemento in posizione indice_classificati di elenco_partite)
    indice_classificati = indice_classificati + 1
FINE



creare_classifica_vuota

DATI DI INPUT
vincitori, elenco dei dieci migliori giocatori di partite, Array ad una dimensione (NUMERO_MASSIMO_CLASSIFICATI) di vincitore
NUMERO_MASSIMO_CLASSIFICATI, numero massimo di giocatori di cui è composta la classifica, intero, = 10

DATI DI OUTPUT
vincitori, elenco dei dieci migliori giocatori di partite vuoto, Array ad una dimensione (NUMERO_MASSIMO_CLASSIFICATI) di vincitore

DATI DI LAVORO
vincitore_azzerato, il vincitore con i campi azzerati, record di tipo vincitore

ALGORITMO
vincitore_azzerato = scrivere_carattere_nome_vincitore (vincitore_azzerato, 0 , FINE_STRINGA)
vincitore_azzerato = scrivere_pedina_vincitore (vincitore_azzerato, FINE_STRINGA)
vincitore_azzerato = scrivere_lanci_vincitore(vincitore_azzerato, 0)
vincitore_azzerato = scrivere_lunghezza_percorso_vincitore(vincitore_azzerato, 0)
vincitore_azzerato = scrivere_punteggio(vincitore_azzerato, 0.0)
indice_vincitori = 1;
MENTRE (indice_vincitori < NUMERO_MASSIMO_CLASSIFICATI)
        Elemento di vincitori in posizione indice_vincitori = vincitore_azzerato
        indice_vincitori = indice_vincitori + 1
FINE